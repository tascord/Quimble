// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {                                                         
  id         String @id                                                                                       // User's Code.
  role       String                                                                                           // Staff / Student / Moderator.
  identities String                                                                                           // Lists cant be used here, so a CSV of Identity ID's are.
  layout     String @default("[{\"x\":0,\"y\":0,\"name\":\"Clock\"},{\"x\":0,\"y\":1,\"name\":\"Weather\"}]") // User's widget Layout.
  read_notifications String @default("")                                                                      // List of notifications the user has read.
}

model Identity {
  id       String @id @default(uuid()) // Identity ID.
  name     String @default("")         // Specified name.
  pronouns String @default("")         // Pronouns. Again, Lists can't be used.
}

model Resource {
  id   String @id @default(uuid()) // Resource ID.
  url  String                      // Link to resource.
  tags String @default("")         // CSV tags.
}

model Notification {
  id        String   @id @default(uuid()) // Notification ID.
  title     String                        // Notification title text.
  author    String   @default("System")   // User code of sending author.
  timestamp DateTime @default(now())      // Creation time of notification.
}

model ChatRoom {
  id            String @id @default(uuid()) // Chat Room ID.
  name          String @default("")         // Chat Room name.
  messages      String @default("")         // CSV of message IDs.
  last_message  DateTime @default(now())    // Time of last sent message.
  sticky        Boolean @default(false)     // Whether or not the room is sticky.
}

model ChatMessage {
  id          Int @id @default(autoincrement()) // Message ID.
  author      String                            // Author's Code.
  content     String                            // Message Content.
  timestamp   DateTime @default(now())          // Message Timestamp.
  reply       Int                               // Reply ID if any.
}